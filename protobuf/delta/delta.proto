syntax = "proto3";

// protoc --proto_path=protobuf/delta --go_out=. protobuf/delta/delta.proto

package delta;
option go_package = "delta";

message Point {
    // Latitude - Geographical latitude of the point for the given datum.
    double latitude = 1;
    // Longitude - Geographical longitude of the point for the given datum.
    double longitude = 2;
    // Elevation - Height in meters of the point for the given datum.
    double elevation = 3;
    // Datum - Geographical reference system used for the latitude, longitude & elevation.
    string datum = 4;
}

message Span {
    // Start - time in Unix seconds.
    int64 start = 1;
    // End - time in Unix seconds.  A future date of 9999-01-01T00:00:00Z is used to indicate still open.
    int64 end = 2;
}

message Network {
    string code = 1;
    string external = 2;
    string description = 3;
    bool restricted = 4;
}

message Mark {
    // Code used to uniquely identify GNSS Mark.
    string code = 1;
    string name = 2;

    Network network = 3;
    Point point = 4;
    Span span = 5;
    Monument monument = 6;
    repeated InstalledAntenna installed_antenna = 7;
    repeated InstalledRadome installed_radome = 8;
    repeated DeployedReceiver deployed_receiver = 9;
    repeated Session session = 10;
    repeated InstalledMetSensor installed_met_sensor = 11;
}

message Marks {
    map<string, Mark> marks = 1;
}

message Monument {
    string domes_number = 1;
    string mark_type = 2;
    string type = 3;
    double ground_relationship = 4;
    string foundation_type = 5;
    double foundation_depth = 6;
    string bedrock = 7;
    string geology = 8;
    Span span = 9;
}

message Offset {
    double vertical = 1;
    double north = 2;
    double east = 3;
}

message Equipment {
    string make = 1;
    string model = 2;
    string serial = 3;
    // Type e.g., Strong Motion Sensor
    string type = 4;
}

message InstalledAntenna {
    Equipment equipment = 1;
    Offset offset = 2;
    Span span = 3;
    double azimuth = 4;
}

message InstalledRadome {
    Equipment equipment = 1;
    Span span = 2;
}

message Firmware {
    string version = 1;
    string notes = 2;
    Span span = 3;
}

message Receiver {
    Equipment equipment = 1;
    repeated Firmware firmware = 2;
}

message DeployedReceiver {
    Receiver receiver = 1;
    Span span = 2;
}

message Session {
    string operator = 1;
    string agency = 2;
    string model = 3;
    string satellite_system = 4;
    // Interval - sample interval in nanoseconds
    int64 interval = 5;
    double elevation_mask = 6;
    string header_comment = 7;
    Span span = 8;
}

message InstalledMetSensor {
    Equipment equipment = 1;
    Span span = 2;
    Point point = 3;
    string iMS_comment = 4;
}

// Station is a seismic or guage station.  It is the general location
// location of recording equipment.
message Station {
    // Code used to uniquely identify the Station.
    string code = 1;
    // Name used to describe the general geographical location of the Station.
    string name = 2;

    Network network = 3;
    Point point = 4;
    Span span = 5;

    map<string, Site> sites = 6;  // sites_test.go ensures sites are unique at a station.
}

message Stations {
    map<string, Station> stations = 1;
}

// a seismic sensor or gauge is located at a site.
message Site {
    string location = 1;
    string survey = 2;
    Point point = 3;
    Span span = 4;

    repeated InstalledSensor installed_sensor = 5;
}

message Orientation {
    double dip = 1;
    double azimuth = 2;
}

message Scale {
    double factor = 1;
    double bias = 2;
}

message InstalledSensor {
    Equipment equipment = 1;
    Span span = 2;

    Orientation orientation = 3;
    Offset offset = 4;
    Scale scale = 5;
}

